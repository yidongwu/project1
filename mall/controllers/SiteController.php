<?php
namespace mall\controllers;

use common\models\UserLogin;
use Yii;
use yii\base\InvalidParamException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\frontend\LoginForm;
use common\controllers\CshopController;
use mall\models\PasswordResetRequestForm;
use mall\models\ResetPasswordForm;
use mall\models\SignupForm;
use mall\share\Functions;
use mall\share\Curl;
use common\models\frontend\User;

/**
 * Site controller
 */
class SiteController extends CshopController
{
    private $_curl = '';
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                //'only' => ['login', 'signup'],
                'only' => ['login'],
                'rules' => [
                    [
                        //'actions' => ['signup'],
                        'allow' => false,
                        'roles' => ['@'],
                    ],
                    /*[
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],*/
                ],
            ],
            /*'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],*/
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->_curl =Curl::getInstance();
    }

    /**
     * Displays homepage.
     *
     * @return mixed
     */
    public function actionIndex()
    {
        $this->layout = 'index2';
        return $this->render('index');
    }

    /**
     * Logs in a user.
     *
     * @return mixed
     */
    public function actionLogin()
    {
        $this->layout = "login";
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $model = new LoginForm();
        if ($model->load(Yii::$app->request->post()) && $model->login()) {
            //记录用户登录信息
            $log_info['login_ip'] = $_SERVER['HTTP_X_REAL_IP'];
            $log_info['login_time'] = time();
            $log_info['login_sys'] = Yii::$app->params['shop'];

            $res = User::find()->select(['access_token'])->where(['id' => Yii::$app->user->id])->one();
            $url = Yii::$app->params['api.log.login'] . $res->access_token;
            $res = $this->_curl->postCurl($url, json_encode($log_info));
            $create_cookie = Functions::getInstance();
            $cart_cookie_id = $create_cookie->createCookie('cart_id');
            $redis = Yii::$app->redis;
            if(!empty($cart_info = $redis->get($cart_cookie_id))) {
                $redis->del($cart_cookie_id);
                $res = User::find()->select(['access_token'])->where(['id' => Yii::$app->user->id])->one();
                $url = Yii::$app->params['api.cart.post'] . $res->access_token;
                $res = $this->_curl->postCurl($url, $cart_info);
                //删除cookie和reids缓存
                Yii::$app->response->getCookies()->remove('cart_id');
            }
            return $this->goBack();
        } else {
            $model->password = '';

            return $this->render('login', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Logs out the current user.
     *
     * @return mixed
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }



    /**
     * Signs user up.
     *
     * @return mixed
     */
    public function actionSignup()
    {
        $this->layout = 'login';
        $model = new SignupForm();
        if ($post = Yii::$app->request->post()) {
            //调用注册接口
            $url = Yii::$app->params['api.user.user.register'] . Yii::$app->params['loger_access_token'];
            $res = $this->_curl->postCurl($url, json_encode($post));
            $res1 = json_decode($res[0], true);
            if ($res1[0] == 100) {
                if ($res1[1]) {
                    //显示提示激活邮件信息，并且发送激活邮件
                    $url = Yii::$app->params['api.user.register'] . $res1[1];
                    $res = $this->_curl->getCart($url);
                    return $this->render('active', [
                    ]);
                }
            }
        }


        return $this->render('signup', [
            'model' => $model,
        ]);
    }


    /**
     * Requests password reset.
     *
     * @return mixed
     */
    public function actionRequestPasswordReset()
    {
        $model = new PasswordResetRequestForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail()) {
                Yii::$app->session->setFlash('success', 'Check your email for further instructions.');

                return $this->goHome();
            } else {
                Yii::$app->session->setFlash('error', 'Sorry, we are unable to reset password for the provided email address.');
            }
        }

        return $this->render('requestPasswordResetToken', [
            'model' => $model,
        ]);
    }

    /**
     * Resets password.
     *
     * @param string $token
     * @return mixed
     * @throws BadRequestHttpException
     */
    public function actionResetPassword($token)
    {
        try {
            $model = new ResetPasswordForm($token);
        } catch (InvalidParamException $e) {
            throw new BadRequestHttpException($e->getMessage());
        }

        if ($model->load(Yii::$app->request->post()) && $model->validate() && $model->resetPassword()) {
            Yii::$app->session->setFlash('success', 'New password saved.');

            return $this->goHome();
        }

        return $this->render('resetPassword', [
            'model' => $model,
        ]);
    }
}
