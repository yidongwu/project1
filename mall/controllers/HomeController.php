<?php
namespace mall\controllers;

use backend\models\AdGoodsAttr;
use mall\models\AdAttrs;
use mall\models\AdGoods;
use mall\share\Functions;
use Yii;
use yii\base\InvalidParamException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use mall\share\Curl;
use common\controllers\CshopController;
use mall\models\PasswordResetRequestForm;
use mall\models\ResetPasswordForm;
use mall\models\SignupForm;
use mall\models\ContactForm;
use yii\data\Pagination;

/**
 * Site controller
 */
class HomeController extends CshopController
{
    const EXPIRE_TIME = 5;
    const LOG_EXPIRE_TIME = 3600;
    private $_functions = '';
    private $_curl = '';
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                //'only' => ['login', 'signup'],
                'only' => ['login'],
                'rules' => [
                    [
                        //'actions' => ['signup'],
                        'allow' => false,
                        'roles' => ['@'],
                    ],
                    /*[
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],*/
                ],
            ],
            /*'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],*/
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->_functions = Functions::getInstance();
        $this->_curl = Curl::getInstance();
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    /**
     * Displays homepage.
     *
     * @return mixed
     */
    public function actionIndex()
    {
        $this->layout = 'index2';
        $url = Yii::$app->params['api.goods.top3'] . Yii::$app->params['loger_access_token'];
        $res = $this->_curl->getCart($url);
        $api_top3_res = json_decode($res[0], true);
        //查詢商品列表
        Yii::$app->request->get('page') ? $page = Yii::$app->request->get('page') : $page = 0;
        $url = Yii::$app->params['api.goods.get'] . Yii::$app->params['loger_access_token'] . '&page=' . $page;
        $res = $this->_curl->getCart($url);
        $goods_list = json_decode($res[0], true);
        $pages = new Pagination(['totalCount' => $goods_list['total_page']]);
        return $this->render('index',[
            'goods_list' => (array)$goods_list['goods_list'],
            'page' => $pages,
            'top3' => $api_top3_res
        ]);
    }

    public function actionAddCart() {
        $redis = Yii::$app->redis;
        $goods_name = $redis->get('goods_name');
        echo $goods_name;
        exit;
    }

    public function actionDetail() {
        $this->layout = 'page';
        if(!empty(Yii::$app->request->get('id'))) {
            $goods_id = trim(Yii::$app->request->get('id'));
            $redis = Yii::$app->redis;
        } else {
            return 404;
        }

        $key = "goods:" . $goods_id;
        if($goods_info = $redis->get($key)) {
            $goods_info = json_decode($goods_info,true);
        } else {
            $goods_info = [];
            $goods = AdGoods::find()->select(['id', 'goods_name', 'stock', 'current_original_price'])->where(['id' => $goods_id, 'is_display' => 1, 'is_delete' => 0])->one();
            $goods_info['goods_detail']['name'] = $goods->goods_name;
            $goods_info['goods_detail']['stock'] = $goods->stock;
            $goods_info['goods_detail']['price'] = $goods->current_original_price;
            $goods_info['goods_detail']['gid'] = $goods->id;
            $aga_attr = AdGoodsAttr::find()->where(['goods_id' => $goods_id])->all();
            if(!empty($aga_attr)) {
                foreach($aga_attr as $k => $attr_item) {
                    $attr_name = $attr_item->getAdAttrs()->select(['attr_name'])->where(['is_display' => 1])->asArray()->one(); //关联表增加筛选条件和选择特定字段
                    $goods_info['goods_attrs'][$k]['attr_name'] = $attr_name['attr_name'];
                    $goods_info['goods_attrs'][$k]['attr_value'] = $aga_attr[$k]['attr_value'];
                }
                $redis->set($key, json_encode($goods_info));
                $redis->expire($key, self::EXPIRE_TIME);
            }
        }
        return $this->render('detail',[
            'goods_info' => $goods_info,
            'detail' => 'dfas'
        ]);
    }

}
